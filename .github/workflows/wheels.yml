name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: 'TAG to be built and published'
        required: true
        default: 'vx.x.x'
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels_39:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15, macos-11]

    steps:
      - uses: actions/checkout@v2
      
#       - name: Checkout tag
#         if: ${{ github.event_name == 'workflow_dispatch'}}
#         run: git checkout ${{ github.event.inputs.tag }}

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          
  build_wheels_38:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15, macos-11]

    steps:
      - uses: actions/checkout@v2
      
#       - name: Checkout tag
#         if: ${{ github.event_name == 'workflow_dispatch'}}
#         run: git checkout ${{ github.event.inputs.tag }}
  
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_wheels_37:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15, macos-11]

    steps:
      - uses: actions/checkout@v2
      
#       - name: Checkout tag
#         if: ${{ github.event_name == 'workflow_dispatch'}}
#         run: git checkout ${{ github.event.inputs.tag }}
  
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          
  build_wheels_36:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15, macos-11]

    steps:
      - uses: actions/checkout@v2
      
#       - name: Checkout tag
#         if: ${{ github.event_name == 'workflow_dispatch'}}
#         run: git checkout ${{ github.event.inputs.tag }}
  
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.6'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
#       - name: Checkout tag
#         if: ${{ github.event_name == 'workflow_dispatch'}}
#         run: git checkout ${{ github.event.inputs.tag }}
  
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels_39, build_wheels_38, build_wheels_37, build_wheels_36, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
